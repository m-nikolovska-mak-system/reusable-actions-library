name: Check File Changes

on:
  workflow_call:
    inputs:
      watched_files:
        description: 'Files to watch (comma-separated or newline-separated)'
        required: true
        type: string
    outputs:
      files_changed:
        value: ${{ jobs.check-changes.outputs.files_changed }}
      changed_files_list:
        value: ${{ jobs.check-changes.outputs.changed_files_list }}

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      files_changed: ${{ steps.check.outputs.files_changed }}
      changed_files_list: ${{ steps.check.outputs.changed_files_list }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous release tag
        id: prev_tag
        run: |
          git fetch --tags
          current_tag="${{ github.event.release.tag_name }}"
          prev_tag=$(git tag --sort=-creatordate | grep -v "^${current_tag}$" | head -n1)
          
          if [ -z "$prev_tag" ]; then
            echo "⚠️ No previous tag found, using first commit."
            prev_tag=$(git rev-list --max-parents=0 HEAD)
          fi

          echo "prev_tag=$prev_tag" >> $GITHUB_OUTPUT
          echo "Previous tag/ref: $prev_tag"
          echo "Current tag: $current_tag"

      - name: Check for file changes
        id: check
        run: |
          base_ref="${{ steps.prev_tag.outputs.prev_tag }}"
          head_ref="${{ github.event.release.tag_name }}"
          
          echo "Checking changes between $base_ref and $head_ref"
          
          changed_files=$(git diff --name-only $base_ref $head_ref)
          echo "Changed files in commit range:"
          echo "$changed_files"
          
          watched_files=$(echo "${{ inputs.watched_files }}" | tr ',' '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          echo "Watched files:"
          echo "$watched_files"
          
          files_changed="false"
          changed_files_list=""
          
          while IFS= read -r watched_file; do
            [ -z "$watched_file" ] && continue
            if echo "$changed_files" | grep -q "^${watched_file}$"; then
              files_changed="true"
              echo "✓ File changed: $watched_file"
              changed_files_list="${changed_files_list:+$changed_files_list,}$watched_file"
            else
              echo "✗ File not changed: $watched_file"
            fi
          done <<< "$watched_files"
          
          echo "files_changed=$files_changed" >> $GITHUB_OUTPUT
          echo "changed_files_list=$changed_files_list" >> $GITHUB_OUTPUT
          echo "==== Results ===="
          echo "Files changed: $files_changed"
          echo "Changed files list: $changed_files_list"
