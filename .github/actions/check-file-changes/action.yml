name: 'Check File Changes'
description: 'Detects if specific files changed between two git references'

inputs:
  watched_files:
    description: 'Files to watch (one per line or comma-separated)'
    required: true
  base_ref:
    description: 'Base git reference (tag, commit, branch)'
    required: true
  head_ref:
    description: 'Head git reference to compare against'
    required: true

outputs:
  files_changed:
    description: 'true if any watched files changed, false otherwise'
    value: ${{ steps.check.outputs.files_changed }}
  changed_files_list:
    description: 'List of changed files that were watched'
    value: ${{ steps.check.outputs.changed_files_list }}

runs:
  using: 'composite'
  steps:
    - name: Check for file changes
      id: check
      shell: bash
      run: |
        echo "Checking changes between ${{ inputs.base_ref }} and ${{ inputs.head_ref }}"
        
        # Get list of changed files
        changed_files=$(git diff --name-only ${{ inputs.base_ref }} ${{ inputs.head_ref }})
        
        # Convert watched_files input to array (handle both newline and comma separation)
        watched_files=$(echo "${{ inputs.watched_files }}" | tr ',' '\n' | tr -d ' ')
        
        # Check if any watched file changed
        files_changed="false"
        changed_files_list=""
        
        while IFS= read -r watched_file; do
          if echo "$changed_files" | grep -q "^${watched_file}$"; then
            files_changed="true"
            if [ -z "$changed_files_list" ]; then
              changed_files_list="$watched_file"
            else
              changed_files_list="$changed_files_list,$watched_file"
            fi
          fi
        done <<< "$watched_files"
        
        echo "files_changed=$files_changed" >> $GITHUB_OUTPUT
        echo "changed_files_list=$changed_files_list" >> $GITHUB_OUTPUT
        echo "Files changed: $files_changed"
        echo "Changed files: $changed_files_list"
