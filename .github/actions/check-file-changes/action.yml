name: 'Check File Changes'
description: 'Detects if specific files changed between git references (tags, commits, branches)'

inputs:
  target_file:
    description: 'File or directory path to monitor (e.g., src/App.java or src/)'
    required: true
  from_ref:
    description: 'Starting git reference (tag, commit, branch). If empty, uses previous tag.'
    required: false
    default: ''
  to_ref:
    description: 'Ending git reference. Defaults to current commit.'
    required: false
    default: ''

outputs:
  changed:
    description: 'Whether the target file/path changed (true/false)'
    value: ${{ steps.check.outputs.changed }}
  changed_files:
    description: 'List of all changed files (newline-separated)'
    value: ${{ steps.check.outputs.changed_files }}
  from_ref:
    description: 'The actual from reference used'
    value: ${{ steps.check.outputs.from_ref }}
  to_ref:
    description: 'The actual to reference used'
    value: ${{ steps.check.outputs.to_ref }}

runs:
  using: 'composite'
  steps:
    - name: Detect file or directory changes
      id: check
      shell: bash
      run: |
        set -e
        echo "🔍 Checking if '${{ inputs.target_file }}' changed..."
        
        TARGET="${{ inputs.target_file }}"
        FROM_REF="${{ inputs.from_ref }}"
        TO_REF="${{ inputs.to_ref }}"
        
        # Determine TO reference
        if [ -z "$TO_REF" ]; then
          TO_REF="${{ github.sha }}"
        fi
        
        # Determine FROM reference
        if [ -z "$FROM_REF" ]; then
          CURRENT_TAG="${{ github.event.release.tag_name }}"
          if [ -n "$CURRENT_TAG" ]; then
            # Get previous tag in chronological order
            PREV_TAG=$(git tag --sort=-creatordate | grep -B1 "^${CURRENT_TAG}$" | head -n1 || echo "")
            if [ -z "$PREV_TAG" ] || [ "$PREV_TAG" = "$CURRENT_TAG" ]; then
              echo "⚠️ No previous tag found - comparing against initial commit"
              FROM_REF=$(git rev-list --max-parents=0 HEAD)
            else
              FROM_REF="$PREV_TAG"
            fi
          else
            # Fallback: compare with previous commit
            FROM_REF="HEAD~1"
          fi
        fi
        
        echo "📊 Comparing: $FROM_REF → $TO_REF"
        echo "from_ref=$FROM_REF" >> $GITHUB_OUTPUT
        echo "to_ref=$TO_REF" >> $GITHUB_OUTPUT
        
        # Get changed files
        CHANGED_FILES=$(git diff --name-only "$FROM_REF" "$TO_REF" || echo "")
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "ℹ️ No files changed"
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "changed_files=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Set changed_files output
        echo "changed_files<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Check if target file or any file inside target directory changed
        if echo "$CHANGED_FILES" | grep -qE "^${TARGET}(/|$)"; then
          echo "✅ Target '$TARGET' WAS changed!"
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "ℹ️ Target '$TARGET' was NOT changed"
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

